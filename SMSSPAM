import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, accuracy_score

# Load dataset
df = pd.read_csv('C:/Users/vigneshwaran k/Downloads/Codsoft-main/CodSoft-main/SMSSPAM/data/spam.csv', encoding='latin-1')
print(df.columns)
df = df[['v1', 'v2']]  # Keep only the relevant columns
df.columns = ['label', 'message']  # Rename columns

# Strip whitespace and drop missing values
df['label'] = df['label'].astype(str).str.strip()
df['message'] = df['message'].fillna('')
df = df.dropna(subset=['label', 'message'])

# Encode labels safely
df['label_num'] = df['label'].map({'ham': 0, 'spam': 1})

# Drop rows where encoding failed
df = df.dropna(subset=['label_num'])

# Final check
print("Final dataset shape:", df.shape)

# Split dataset
X_train, X_test, y_train, y_test = train_test_split(
    df['message'], df['label_num'], test_size=0.2, random_state=42
)

# Vectorize text
vectorizer = TfidfVectorizer(stop_words='english')
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)
# Model training
model = LogisticRegression()
model.fit(X_train_vec, y_train)

# Predictions
y_pred = model.predict(X_test_vec)

# Evaluation
print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))
